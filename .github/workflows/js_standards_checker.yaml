name: 'JS Coding standards validation'

on: pull_request

jobs:
  eslint-checker:
    name: 'ESLint Code standards validation'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Node js installer
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Yarn
        run: |
          npm -v
          npm install yarn
          
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install ESlint
        run: |
            sudo apt install jq
            VERSION=$(jq -r '.packages[] | select(.name == "drupal/core") | .version' composer.lock)
            echo "Version the drupal/core = $VERSION"
            mkdir -p web/core
            cd web
            wget https://git.drupalcode.org/project/drupal/raw/$VERSION/.eslintrc.json
            wget https://git.drupalcode.org/project/drupal/raw/$VERSION/.eslintignore
            cd core
            wget https://git.drupalcode.org/project/drupal/raw/$VERSION/core/.eslintignore
            wget https://git.drupalcode.org/project/drupal/raw/$VERSION/core/.eslintrc.jquery.json
            wget https://git.drupalcode.org/project/drupal/raw/$VERSION/core/.eslintrc.json
            wget https://git.drupalcode.org/project/drupal/raw/$VERSION/core/.eslintrc.legacy.json
            wget https://git.drupalcode.org/project/drupal/raw/$VERSION/core/.eslintrc.passing.json
            cd ../..
      
      - name: Installing reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      
      - name: Configuring diff file.
        run: |
          git config --global --add safe.directory .
          git diff origin/$GITHUB_BASE_REF origin/$GITHUB_HEAD_REF --name-only -- '***.js*' |\
          grep -e $WEBSITE_ROOT/modules/custom -e $WEBSITE_ROOT/themes/custom -e $WEBSITE_ROOT/profiles/custom |\
          tr "\n" " " > /tmp/check
          cat /tmp/check

      - name: JS coding standards checking
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn eslint `cat /tmp/check` \
          --no-error-on-unmatched-pattern |
          reviewdog -f=eslint -name="ESLint" \
          -reporter=github-pr-review \
          -fail-level=any -filter-mode=nofilter -tee
        timeout-minutes: 5
